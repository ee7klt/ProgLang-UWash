Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- use "section3.sml";
[opening section3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val compose = fn : ('a -> 'b) * ('c -> 'a) -> 'c -> 'b
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
infix !>
val !> = fn : 'a * ('a -> 'b) -> 'b
val sqrt_of_abs = fn : int -> real
val backup1 = fn : ('a -> 'b option) * ('a -> 'b) -> 'a -> 'b
val backup2 = fn : ('a -> 'b) * ('a -> 'b) -> 'a -> 'b
val sorted3_tupled = fn : int * int * int -> bool
val t1 = true : bool
val sorted3 = fn : int -> int -> int -> bool
val t2 = true : bool
val sorted3_nicer = fn : int -> int -> int -> bool
val fold = <hidden-value> : ('a * 'b -> 'a) * 'a * 'b list -> 'a
val fold = fn : ('a * 'b -> 'a) -> 'a -> 'b list -> 'a
val sum = <hidden-value> : int list -> int
val is_nonnegative = fn : int -> bool
val sum = fn : int list -> int
val exists = fn : ('a -> bool) -> 'a list -> bool
val hasZero = fn : int list -> bool
val incrementAll = fn : int list -> int list
val range = fn : int * int -> int list
val curry = <hidden-value> : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val curry = fn : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val uncurry = fn : ('a -> 'b -> 'c) -> 'a * 'b -> 'c
val other_curry = fn : ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
val it = () : unit
- curry range 1 4
= ;
val it = [1,2,3,4] : int list
- curry range 1;
val it = fn : int -> int list
- val countup = curry range 1;
val countup = fn : int -> int list
- countup 3
= ;
val it = [1,2,3] : int list
- ;

Process sml finished
Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- use "section3.sml";
[opening section3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
section3.sml:365.5-365.12 Error: can't find function arguments in clause

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 
Process sml finished
- = stdIn:2.1-2.8 Error: unbound variable or constructor: Process
stdIn:2.9-2.12 Error: unbound variable or constructor: sml
stdIn:2.13-2.21 Error: unbound variable or constructor: finished
- 

Process sml finished
Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- use "section3.sml";
[opening section3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val compose = fn : ('a -> 'b) * ('c -> 'a) -> 'c -> 'b
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
infix !>
val !> = fn : 'a * ('a -> 'b) -> 'b
val sqrt_of_abs = fn : int -> real
val backup1 = fn : ('a -> 'b option) * ('a -> 'b) -> 'a -> 'b
val backup2 = fn : ('a -> 'b) * ('a -> 'b) -> 'a -> 'b
val sorted3_tupled = fn : int * int * int -> bool
val t1 = true : bool
val sorted3 = fn : int -> int -> int -> bool
val t2 = true : bool
val sorted3_nicer = fn : int -> int -> int -> bool
val fold = <hidden-value> : ('a * 'b -> 'a) * 'a * 'b list -> 'a
val fold = fn : ('a * 'b -> 'a) -> 'a -> 'b list -> 'a
val sum = <hidden-value> : int list -> int
val is_nonnegative = fn : int -> bool
val sum = fn : int list -> int
val exists = fn : ('a -> bool) -> 'a list -> bool
val hasZero = fn : int list -> bool
val incrementAll = fn : int list -> int list
val range = fn : int * int -> int list
val curry = <hidden-value> : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val curry = fn : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val uncurry = fn : ('a -> 'b -> 'c) -> 'a * 'b -> 'c
val other_curry = fn : ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
val countup = fn : int -> int list
val xs = [1,2,3,4,5,6,7] : int list
val it = () : unit
- val hasZero = fn : int list -> boolstdIn:2.18-2.23 Error: syntax error: deleting  COLON ID
stdIn:2.29 Error: syntax error found at ARROW
- 

Process sml finished
Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- use "section3.sml";
[opening section3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val compose = fn : ('a -> 'b) * ('c -> 'a) -> 'c -> 'b
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
infix !>
val !> = fn : 'a * ('a -> 'b) -> 'b
val sqrt_of_abs = fn : int -> real
val backup1 = fn : ('a -> 'b option) * ('a -> 'b) -> 'a -> 'b
val backup2 = fn : ('a -> 'b) * ('a -> 'b) -> 'a -> 'b
val sorted3_tupled = fn : int * int * int -> bool
val t1 = true : bool
val sorted3 = fn : int -> int -> int -> bool
val t2 = true : bool
val sorted3_nicer = fn : int -> int -> int -> bool
val fold = <hidden-value> : ('a * 'b -> 'a) * 'a * 'b list -> 'a
val fold = fn : ('a * 'b -> 'a) -> 'a -> 'b list -> 'a
val sum = <hidden-value> : int list -> int
val is_nonnegative = fn : int -> bool
val sum = fn : int list -> int
val exists = fn : ('a -> bool) -> 'a list -> bool
val hasZero = fn : int list -> bool
val incrementAll = fn : int list -> int list
val range = fn : int * int -> int list
val curry = <hidden-value> : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val curry = fn : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val uncurry = fn : ('a -> 'b -> 'c) -> 'a * 'b -> 'c
val other_curry = fn : ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
val countup = fn : int -> int list
val xs = [1,2,3,4,5,6,7] : int list
val x = ref 43 : int ref
val y = ref 42 : int ref
val z = ref 43 : int ref
val w = 85 : int
val it = () : unit
- List.map;
val it = fn : ('a -> 'b) -> 'a list -> 'b list
- List.foldr;
val it = fn : ('a * 'b -> 'b) -> 'b -> 'a list -> 'b
- fold
= ;
val it = fn : ('a * 'b -> 'a) -> 'a -> 'b list -> 'a
- fold (fn(x,y) => x+y) 0 [1,2,3];
val it = 6 : int
- fold (fn(x,y) => x^y) [] ["a","b","c"];
stdIn:7.1-7.39 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string
  operand:         'Z list
  in expression:
    (fold (fn (<pat>,<pat>) => <exp> ^ <exp>)) nil
- fold (fn(x,y) => x^y) "" ["a","b","c"];
val it = "abc" : string
- foldr (fn(x,y) => x^y) "" ["a","b","c"];
val it = "abc" : string
- foldl (fn(x,y) => x^y) "" ["a","b","c"];
val it = "cba" : string
- foldl (fn(x,y) => x^y) "" ["a","b","c"];val it = "cba" : string


Process sml finished
Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- use "section3.sml";
[opening section3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val compose = fn : ('a -> 'b) * ('c -> 'a) -> 'c -> 'b
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
infix !>
val !> = fn : 'a * ('a -> 'b) -> 'b
val sqrt_of_abs = fn : int -> real
val backup1 = fn : ('a -> 'b option) * ('a -> 'b) -> 'a -> 'b
val backup2 = fn : ('a -> 'b) * ('a -> 'b) -> 'a -> 'b
val sorted3_tupled = fn : int * int * int -> bool
val t1 = true : bool
val sorted3 = fn : int -> int -> int -> bool
val t2 = true : bool
val sorted3_nicer = fn : int -> int -> int -> bool
val fold = <hidden-value> : ('a * 'b -> 'a) * 'a * 'b list -> 'a
val fold = fn : ('a * 'b -> 'a) -> 'a -> 'b list -> 'a
val sum = <hidden-value> : int list -> int
val is_nonnegative = fn : int -> bool
val sum = fn : int list -> int
val exists = fn : ('a -> bool) -> 'a list -> bool
val hasZero = fn : int list -> bool
val incrementAll = fn : int list -> int list
val range = fn : int * int -> int list
val curry = <hidden-value> : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val curry = fn : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val uncurry = fn : ('a -> 'b -> 'c) -> 'a * 'b -> 'c
val other_curry = fn : ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
val countup = fn : int -> int list
val xs = [1,2,3,4,5,6,7] : int list
val x = ref 43 : int ref
val y = ref 42 : int ref
val z = ref 43 : int ref
val w = 85 : int
val fold_map = fn : ('a -> 'b) -> 'a list -> 'b list
val it = () : unit
- fold_map (fn x => x+1) [1,2,3];
val it = [2,3,4] : int list
- foldr;
val it = fn : ('a * 'b -> 'b) -> 'b -> 'a list -> 'b
- val fold_map = fn : ('a -> 'b) -> 'a list -> 'b liststdIn:4.19-4.24 Error: syntax error: deleting  COLON LPAREN TYVAR
stdIn:4.25-4.31 Error: syntax error: deleting  ARROW TYVAR RPAREN
stdIn:4.32-4.37 Error: syntax error: deleting  ARROW TYVAR
stdIn:4.43-4.48 Error: syntax error: deleting  ARROW TYVAR
stdIn:4.1 Error: syntax error found at EOF
- 

Process sml finished
Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- use "section3.sml";
[opening section3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
section3.sml:394.19-396.36 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list
  operand:         ('Y * 'X -> 'X) -> 'X -> 'Y list -> 'X
  in expression:
    ((foldr (fn <pat> => <exp>)) nil) foldr

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- [autoloading]stdIn:1.3-1.14 Error: unbound variable or constructor: autoloading
- 

Process sml finished
Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- use "section3.sml";'
[opening section3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
section3.sml:394.19-395.31 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list
  operand:         ('Z -> 'Y) -> 'X
  in expression:
    ((foldr (fn <pat> => <exp>)) nil) fold_map

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "section3.sml";
[opening section3.sml]
section3.sml:394.19-395.31 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list
  operand:         ('Z -> 'Y) -> 'X
  in expression:
    ((foldr (fn <pat> => <exp>)) nil) fold_map

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
-     ((foldr (fn <pat> => <exp>)) nil) fold_mapstdIn:1.18 Error: expression or pattern begins with infix identifier "<"
stdIn:1.23 Error: expression or pattern ends with infix identifier ">"
stdIn:1.18-1.22 Error: non-constructor applied to argument in pattern
stdIn:1.27 Error: expression or pattern begins with infix identifier "<"
stdIn:1.32 Error: expression or pattern ends with infix identifier ">"
stdIn:1.28-1.31 Error: unbound variable or constructor: exp
stdIn:1.40-1.48 Error: unbound variable or constructor: fold_map
stdIn:1.27-1.32 Error: operator is not a function [tycon mismatch]
  operator: bool
  in expression:
    (< <errorvar>) >
- 

Process sml finished
Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- use "section3.sml";
[opening section3.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val compose = fn : ('a -> 'b) * ('c -> 'a) -> 'c -> 'b
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
val sqrt_of_abs = <hidden-value> : int -> real
infix !>
val !> = fn : 'a * ('a -> 'b) -> 'b
val sqrt_of_abs = fn : int -> real
val backup1 = fn : ('a -> 'b option) * ('a -> 'b) -> 'a -> 'b
val backup2 = fn : ('a -> 'b) * ('a -> 'b) -> 'a -> 'b
val sorted3_tupled = fn : int * int * int -> bool
val t1 = true : bool
val sorted3 = fn : int -> int -> int -> bool
val t2 = true : bool
val sorted3_nicer = fn : int -> int -> int -> bool
val fold = <hidden-value> : ('a * 'b -> 'a) * 'a * 'b list -> 'a
val fold = fn : ('a * 'b -> 'a) -> 'a -> 'b list -> 'a
val sum = <hidden-value> : int list -> int
val is_nonnegative = fn : int -> bool
val sum = fn : int list -> int
val exists = fn : ('a -> bool) -> 'a list -> bool
val hasZero = fn : int list -> bool
val incrementAll = fn : int list -> int list
val range = fn : int * int -> int list
val curry = <hidden-value> : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val curry = fn : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val uncurry = fn : ('a -> 'b -> 'c) -> 'a * 'b -> 'c
val other_curry = fn : ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
val countup = fn : int -> int list
val xs = [1,2,3,4,5,6,7] : int list
val x = ref 43 : int ref
val y = ref 42 : int ref
val z = ref 43 : int ref
val w = 85 : int
val fold_map = fn : ('a -> 'b) -> 'a list -> 'b list
val it = () : unit
- val countup = fn : int -> int liststdIn:2.18-2.26 Error: syntax error: deleting  COLON ID ARROW
stdIn:2.1 Error: syntax error found at EOF
- 

Process sml finished
