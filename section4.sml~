fun f x = (* f: t1-> t2 since all functions can take only one argument, x: t1 *)
    
(* y : t3, z: t4 *)

    let val (y,z) = x in   (* t1 = t3*t4 *)  
	(abs y) + z   (* abs : int -> int, therefore t3: int, t4: int because can only add int to int *)
    end   (* therefore t1 = int*int *)
 (* so let-expression: int, so body of function : int, therefore t2 : int *)
(* f: int*int -> int *)


